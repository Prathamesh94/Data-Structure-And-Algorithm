Q1) Set Matrix Zeroes : Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

Answer:Loop 1: Iterate on array and copy index in hashmap if matrix[i][j] == 0
       Loop 2: Iterate on array if hashmap has i or j set element equal to 0

Q1) Next Permutation : A permutation of an array of integers is an arrangement of its members into a sequence or linear order.

Answer:Loop 1: swapIndex1 => To find out break point from end of the array nums[i]>nums[i-1].  ::   if(nums[i]>nums[i-1]) => swapIndex1 = i-1.  
       Loop 2: swapIndex2 => To find out sightly greater number than nums[swapIndex1] on right side of breakpoint         ::   nums[i]>nums[swapIndex1]
       If there is no break point return reversed array as output no swapping required         ::   swapIndex1 == 0 && swapIndex2 == 0
       Else Swap numbers on SwapIndex1 and SwapIndex2  and reverse array from breakpoint       ::   Swap(nums,swapIndex1,swapIndex2)  reverse(nums,swapIndex1+1,nums.length-1)
       
 Q2)Sort an array of 0’s 1’s 2’s
 
 Answer: Initiate low mid with zero and high with n-1
         Switch case 0) nums = swap(nums,mid,low);
                        low = low +1;
                        mid = mid +1
                case 1) mid = mid +1
                case 2) nums = swap(nums,mid,high)
                        high = high -1
