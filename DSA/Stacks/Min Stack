/*Design a stack that supports push, pop, top, and retrieve the minimum element in constant time.
push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
getMin() -- Retrieve the minimum element in the stack.*/
Link: https://www.scaler.com/academy/mentee-dashboard/class/34910/assignment/problems/52/?navref=cl_pb_nv_tb

Solution:
function solve() {
    // Initalize your variables here
    this.stack = new Array()
    this.min = Number.MAX_SAFE_INTEGER

    
};
solve.prototype.push = function (e) {
    this.stack.push(e)
    this.min = Math.min(e,this.min)
    return this.stack

};
solve.prototype.pop = function () {
    let removedElement 
    if(this.stack.length >0) removedElement = this.stack.pop()
    this.min = (this.min == removedElement) ?  this.min = Math.min(...this.stack): this.min
    return this.stack
};
solve.prototype.top = function () {
    // return top
    return this.stack.length > 0 ? this.stack[this.stack.length-1] : -1

};
solve.prototype.getMin = function () {
    // return minimum
    return this.stack.length > 0 ? this.min : -1
};
module.exports = {
    solve: solve
};